                                                         SCRIPTS DE CRIAÇAO NO POSTGRESQL
                                                         
                                                         
                                                         
                                                         
                                                         
                                                         
                                                         
                                                         
                                                         
                                                         --Criação do usuario; 

CREATE ROLE "Joao Lucas" WITH
  LOGIN
  SUPERUSER
  INHERIT
  CREATEDB
  CREATEROLE
  REPLICATION
  ENCRYPTED PASSWORD 'SCRAM-SHA-256$4096:hzpOnROLC3kZ+ZwPY3gibA==$wo8tkAWQu8dwJ1I3S3zCFjny/rMHo/fiPuMCGK6mxx0=:RYwfNIq6IR6XhcoeB39LxSOx2yxTvu6By2RFfgDetZ0=';
  
  
  
                                                          --Criação da database UVV;

CREATE DATABASE "UVV"
    WITH 
    OWNER = "Joao Lucas"
    ENCODING = 'UTF8'
    LC_COLLATE = 'en_US.UTF-8'
    LC_CTYPE = 'en_US.UTF-8'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1;
    
    
    
    --Criação do Schema elmasri;
  
  CREATE SCHEMA IF NOT EXISTS elmasri
    AUTHORIZATION "Joao Lucas";
    
    
    
                                                         --Criação da tabela Departamento;
    
    CREATE TABLE IF NOT EXISTS elmasri.departamento
(
    numero_departamento integer NOT NULL,
    nome_departamento character varying(15) COLLATE pg_catalog."default" NOT NULL,
    cpf_gerente character(11) COLLATE pg_catalog."default" NOT NULL DEFAULT 0,
    data_inicio_gerente date,
    CONSTRAINT departamento_pkey PRIMARY KEY (numero_departamento),
    CONSTRAINT departamento_nome_departamento_key UNIQUE (nome_departamento),
    CONSTRAINT departamento_cpf_gerente_fkey FOREIGN KEY (cpf_gerente)
        REFERENCES public.funcionario (cpf) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS elmasri.departamento
    OWNER to "Joao Lucas";
    
    
                                                           --Criação da tabela dependente;
                                                             
                                                            

CREATE TABLE IF NOT EXISTS elmasri.dependente
(
    cpf_funcionario character(11) COLLATE pg_catalog."default" NOT NULL,
    nome_dependente character varying(15) COLLATE pg_catalog."default" NOT NULL,
    sexo character(1) COLLATE pg_catalog."default",
    data_nascimento date,
    parentesco character varying(15) COLLATE pg_catalog."default",
    CONSTRAINT dependente_pkey PRIMARY KEY (cpf_funcionario, nome_dependente),
    CONSTRAINT dependente_cpf_funcionario_fkey FOREIGN KEY (cpf_funcionario)
        REFERENCES public.funcionario (cpf) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS elmasri.dependente
    OWNER to "Joao Lucas";
    
    
    
                                                     --Criação da tabela Localizaçoes_departamento;
                                                     
     CREATE TABLE IF NOT EXISTS elmasri.dependente
(
    cpf_funcionario character(11) COLLATE pg_catalog."default" NOT NULL,
    nome_dependente character varying(15) COLLATE pg_catalog."default" NOT NULL,
    sexo character(1) COLLATE pg_catalog."default",
    data_nascimento date,
    parentesco character varying(15) COLLATE pg_catalog."default",
    CONSTRAINT dependente_pkey PRIMARY KEY (cpf_funcionario, nome_dependente),
    CONSTRAINT dependente_cpf_funcionario_fkey FOREIGN KEY (cpf_funcionario)
        REFERENCES public.funcionario (cpf) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS elmasri.dependente
    OWNER to "Joao Lucas";
    
    
    
                                                    --Criação da tabela Funcionario BUGADA;
                                                    
    CREATE TABLE IF NOT EXISTS elmasri.funcionario
(
    cpf character(11) COLLATE pg_catalog."default" NOT NULL DEFAULT 0,
    primeiro_nome character varying(15) COLLATE pg_catalog."default" NOT NULL,
    nome_meio character(1) COLLATE pg_catalog."default" NOT NULL,
    ultimo_nome character varying(15) COLLATE pg_catalog."default" NOT NULL,
    data_nascimento date,
    endereco character(50) COLLATE pg_catalog."default",
    sexo character(1) COLLATE pg_catalog."default",
    salario numeric(10,2),
    cpf_supervisor character(11) COLLATE pg_catalog."default" NOT NULL DEFAULT 0,
    numero_departamento integer NOT NULL,
    CONSTRAINT funcionario_pkey PRIMARY KEY (cpf),
    CONSTRAINT funcionario_cpf_supervisor_fkey FOREIGN KEY (cpf_supervisor)
        REFERENCES public.funcionario (cpf) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS elmasri.funcionario
    OWNER to "Joao Lucas";
    
         
    
                                                     --Criação da tabela Projeto;
 CREATE TABLE IF NOT EXISTS elmasri.projeto
(
    numero_projeto integer NOT NULL,
    nome_projeto character varying(15) COLLATE pg_catalog."default",
    numero_departamento integer NOT NULL,
    CONSTRAINT projeto_pkey PRIMARY KEY (numero_projeto),
    CONSTRAINT projeto_nome_projeto_key UNIQUE (nome_projeto),
    CONSTRAINT projeto_numero_departamento_fkey FOREIGN KEY (numero_departamento)
        REFERENCES public.departamento (numero_departamento) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS elmasri.projeto
    OWNER to "Joao Lucas";
    
                                                    --Criação da tabela trabalha_em;
 
 CREATE TABLE IF NOT EXISTS elmasri.trabalha_em
(
    cpf_funcionario character(11) COLLATE pg_catalog."default" NOT NULL,
    numero_projeto integer NOT NULL,
    horas numeric(3,1) NOT NULL,
    CONSTRAINT trabalha_em_pkey PRIMARY KEY (cpf_funcionario, numero_projeto),
    CONSTRAINT trabalha_em_cpf_funcionario_fkey FOREIGN KEY (cpf_funcionario)
        REFERENCES public.funcionario (cpf) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT trabalha_em_numero_projeto_fkey FOREIGN KEY (numero_projeto)
        REFERENCES public.projeto (numero_projeto) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS elmasri.trabalha_em
    OWNER to "Joao Lucas";
                                                             
